type Message {
    name: String
    body: String
}


type Query {
  getMessages: [Message]
  getMessageByName(queryName: String!): [Message]
  getMessageByBody(queryBody: String!): [Message]
}

type Mutation {
  createMsg(data: CreateInput!): Message
  deleteMsgByName( deleteName: String! ):  [Message]
  deleteAllMsg: [Message]
}

type Subscription {
  message: MessageSubscriptionPayload!
}

input CreateInput {
    name: String!
    body: String!
}


enum MutationType {
  CREATED
  UPDATED
  DELETED
}

type MessageSubscriptionPayload {
  mutation: MutationType!
  data: [Message]!
}

